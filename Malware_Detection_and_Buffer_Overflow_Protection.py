#  Enhanced Malware Detection + Buffer Overflow Simulation
def check_for_malware(content):
    content_lower = content.lower()
    suspicious_count = 0

    # List of harmless phrases to avoid false positives
    harmless_phrases = [
        "story about a virus",
        "learning about malware",
        "discussing an attack",
        "history of trojan wars",
        "study on sql injections"
    ]

    # List of dangerous keywords and SQL injection patterns
    malware_signatures = [
        "malware", "virus", "trojan", "exploit", "attack",
        "drop table", "select * from", "delete from", "union select",
        "exec xp_cmdshell", "system(", "insert into", "shutdown", "grant all"
    ]

    #  Buffer Overflow Check: Length exceeding 100 words triggers rejection
    if len(content.split()) > 100:
        print("âš  Buffer Overflow Detected! Content too large.")
        return True

    # Ignore content with harmless contexts
    for phrase in harmless_phrases:
        if phrase in content_lower:
            return False  #  Safe Content

    # Count how many suspicious keywords or patterns are present
    for signature in malware_signatures:
        if signature in content_lower:
            suspicious_count += 1

    # Flag content as malware if 2 or more suspicious patterns are detected
    if suspicious_count >= 2:
        return True  #  Malware/SQL Injection Detected
    else:
        return False  #  Content is Safe

# Updated create_file to check for malware
def create_file(username, fernet):
    filename = input("Enter filename: ")
    content = input("Enter content: ")

    if check_for_malware(content):
        print(" Malware or Buffer Overflow Detected! File content rejected.")
        log_activity(username, "Malware/Overflow Detected", filename)
        return

    encrypted_content = fernet.encrypt(content.encode())
    file_path = os.path.join(base_path, filename)

    with open(file_path, 'wb') as file:
        file.write(encrypted_content)
    
    print(f" File '{filename}' encrypted and saved successfully.")
    log_activity(username, "Created & Encrypted", filename)
